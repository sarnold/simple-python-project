name: Containers

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  get_version:
    name: Get version info
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    defaults:
      run:
        shell: bash
    outputs:
      version: ${{ steps.git_ver.outputs.version }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get package version
        id: git_ver
        run: |
          version=$(git describe --tags | sed -e "s|v||" -e "s|-g|+g|")
          echo "Version from git: ${version}"
          echo "version=${version}" >> $GITHUB_OUTPUT

  extra_distros:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        image:
          - debian:bookworm
          - debian:sid
          - fedora:latest
          - fedora:rawhide
          - rockylinux:9
        include:
          - image: debian:bookworm
            pkgs: python3.11-venv
          - image: debian:sid
            pkgs: python3.13-venv

    runs-on: ubuntu-latest
    needs: [get_version]
    container:
      image: ${{ matrix.image }}

    permissions:
      contents: read
    defaults:
      run:
        shell: bash
    env:
      PYTHONIOENCODING: utf-8

    steps:
    - name: Check github variables
      env:
        VERSION: ${{ needs.get_version.outputs.version }}
      run: |
        echo "Package version from git: ${VERSION}"

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Work-around for https://github.com/actions/runner-images/issues/6775
    - name: Change Owner of Container Working Directory
      if: matrix.image
      run: chown root.root .

    - name: Deps for python (debs)
      if: startsWith(matrix.image, 'deb')
      run: |
        apt-get -qq update
        apt-get install -yqq git wget sudo ${{matrix.pkgs}} python-is-python3 python3 python3-pip

    - name: Deps for python (rh/rocky)
      if: (startsWith(matrix.image, 'roc') || startsWith(matrix.image, 'fed'))
      run: |
        dnf search --refresh epel
        dnf install -y git wget sudo python3-devel python3-pip

    - name: Manually create pip cache dir
      run: mkdir -p ~/.cache/pip

    - uses: actions/cache@v4
      id: cache
      env:
        cache-name: cache-pip
      with:
        path: ~/.cache
        key: ${{ matrix.image }}-${{ env.cache-name }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ matrix.image }}-${{ env.cache-name }}-

    - name: Install dependencies
      run: |
        python3 -m venv .venv
        .venv/bin/pip3 install --upgrade pip wheel setuptools
        .venv/bin/pip3 install tox

    - name: Build dist pkgs
      run: |
        .venv/bin/tox -e build,check
      env:
        SETUPTOOLS_SCM_PRETEND_VERSION: ${{ needs.get_version.outputs.version }}
